{
  "version": 3,
  "configurePresets": [
    {
      "name": "base",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/${presetName}",
      "installDir": "${sourceDir}/install/${presetName}",
      "cacheVariables": {
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_CXX_EXTENSIONS": "OFF",
        "BUILD_TESTS": "ON"  
      }
    },
    {
      "name": "gcc-release",
      "displayName": "GCC Release",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_CXX_FLAGS": "-march=native -ffloat-store"
      },
      "environment": {
        "CXXFLAGS": "-Wall -Wextra -Wpedantic -Wconversion -Wcast-align	-Wcast-qual -Wdeprecated-declarations -Wformat -Wformat-security -Winit-self -Wmissing-declarations	-Wmissing-field-initializers -Wmissing-include-dirs	-Wnon-virtual-dtor -Wold-style-cast -Woverloaded-virtual -Wpointer-arith -Wshadow -Wsign-compare -Wstrict-aliasing -Wstrict-overflow -Wswitch -Wuninitialized -Wunused -Wunused-value -Wvla -Wwrite-strings -Wdeprecated -Wdeprecated-copy -Wdeprecated-enum-enum-conversion -Warray-bounds -Wnull-dereference -Wreturn-type"
      }
    },
    {
      "name": "gcc-debug",
      "displayName": "GCC Debug (Tests + Sanitizers)",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_CXX_FLAGS": "-ggdb3 -fno-omit-frame-pointer -fsanitize=address -fno-optimize-sibling-calls"   
      }
    },
    {
      "name": "clang-debug",
      "displayName": "Clang Debug",
      "inherits": "base",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_CXX_FLAGS": "-fstandalone-debug -Rpass=.*"
      }
    },
    {
      "name": "gcc-asan",
      "displayName": "AddressSanitizer",
      "inherits": "base",
      "description": "Enable AddressSanitizer",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "AddressSanitizer",
        "CMAKE_CXX_FLAGS": "-O1 -g3 -fsanitize=address -fno-omit-frame-pointer -fno-common -fno-optimize-sibling-calls",
        "CMAKE_EXE_LINKER_FLAGS": "-fsanitize=address",
        "CMAKE_SHARED_LINKER_FLAGS": "-fsanitize=address",
        "CMAKE_MODULE_LINKER_FLAGS": "-fsanitize=address"
      },
      "environment": {
        "ASAN_OPTIONS": "check_initialization_order=1:detect_stack_use_after_return=1"
      }
    },
    {
      "name": "gcc-msan",
      "displayName": "MemorySanitizer",
      "inherits": "base",
      "description": "Enable MemorySanitizer",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "MemorySanitizer",
        "CMAKE_CXX_FLAGS": "-O1 -g3 -fsanitize=memory -fsanitize-memory-track-origins -fno-omit-frame-pointer -fno-common -fno-optimize-sibling-calls",
        "CMAKE_EXE_LINKER_FLAGS": "-fsanitize=memory",
        "CMAKE_SHARED_LINKER_FLAGS": "-fsanitize=memory",
        "CMAKE_MODULE_LINKER_FLAGS": "-fsanitize=memory"
      }
    },
    {
      "name": "gcc-tsan",
      "displayName": "ThreadSanitizer",
      "inherits": "base",
      "description": "Enable ThreadSanitizer",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "ThreadSanitizer",
        "CMAKE_CXX_FLAGS": "-g3 -fsanitize=thread",
        "CMAKE_EXE_LINKER_FLAGS": "-fsanitize=thread",
        "CMAKE_SHARED_LINKER_FLAGS": "-fsanitize=thread",
        "CMAKE_MODULE_LINKER_FLAGS": "-fsanitize=thread"
      }
    },
    {
      "name": "gcc-ubsan",
      "displayName": "UndefinedBehaviorSanitizer",
      "inherits": "base",
      "description": "Enable UndefinedBehaviorSanitizer",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "UndefinedBehaviorSanitizer",
        "CMAKE_CXX_FLAGS": "-g3 -fsanitize=alignment,bool,bounds,enum,float-cast-overflow,float-divide-by-zero,integer-divide-by-zero,nonnull-attribute,null,object-size,return,returns-nonnull-attribute,shift,signed-integer-overflow,unreachable,vla-bound -fno-sanitize-recover=bounds,null",
        "CMAKE_EXE_LINKER_FLAGS": "-fsanitize=undefined",
        "CMAKE_SHARED_LINKER_FLAGS": "-fsanitize=undefined",
        "CMAKE_MODULE_LINKER_FLAGS": "-fsanitize=undefined"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "gcc-release",
      "configurePreset": "gcc-release",
      "jobs": 8
    },
    {
      "name": "gcc-debug",
      "configurePreset": "gcc-debug",
      "targets": ["Hermes", "HermesTests"],
      "jobs": 4  
    },
    {
      "name": "clang-debug",
      "configurePreset": "clang-debug",
      "targets": ["Hermes", "HermesTests"]
    },
    {
      "name": "gcc-asan",
      "configurePreset": "gcc-asan",
      "targets": ["Hermes", "HermesTests"]
    },
    {
      "name": "gcc-msan",
      "configurePreset": "gcc-msan",
      "targets": [ "Hermes", "HermesTests"
      ]
    },
    {
      "name": "gcc-tsan",
      "configurePreset": "gcc-tsan",
      "targets": [ "Hermes", "HermesTests"]
    },
    {
      "name": "gcc-ubsan",
      "configurePreset": "gcc-ubsan",
      "targets": ["Hermes", "HermesTests"]
    }
  ],
  "testPresets": [
    {
      "name": "gcc-test",
      "configurePreset": "gcc-debug",
      "output": {"outputOnFailure": true},
      "execution": {
        "noTestsAction": "error",
        "stopOnFailure": false
      },
      "environment": {
        "ASAN_OPTIONS": "detect_stack_use_after_return=1"
      }
    }
  ]
}